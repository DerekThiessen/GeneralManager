@model IEnumerable<GeneralManager.Models.Contact>
@{
	ViewBag.Title = "Home";
}

@section Scripts {
	@Scripts.Render("~/bundles/knockout")
	<script type="text/javascript">
		@functions{
		    public string TokenHeaderValue()
		    {
		        string cookieToken, formToken;
		        AntiForgery.GetTokens(null, out cookieToken, out formToken);
		        return cookieToken + ":" + formToken;
		    }
		}
		function ContactsViewModel() {
			var self = this;
			self.contacts = ko.observableArray([]);
			self.addContact = function () {
				$.ajax({
					type: "post",
					url: "api/contact",
					data: $("#addContact").serialize(),
					dataType: "json",
					success: function (value) {
						self.contacts.push(value);
					},
					headers: {
						'RequestVerificationToken': '@TokenHeaderValue()'
					}
				});
			}
			self.removeContact = function (contact) {
				$.ajax({
					type: "DELETE",
					url: contact.Self,
					success: function () {
						self.contacts.remove(contact);
					},
					headers: {
						'RequestVerificationToken': '@TokenHeaderValue()'
					}

				});
			}

			$.getJSON("api/contact", function (data) {
				self.contacts(data);
			});
		}
		ko.applyBindings(new ContactsViewModel());
	</script>
}
<div class="container">
	<div class="row" style="border-bottom: 1px solid black;">
		<div class="col-md-3">@Html.LabelFor(model => model.First().FullName)</div>
		<div class="col-md-2">@Html.LabelFor(model => model.First().Address)</div>
		<div class="col-md-1">@Html.LabelFor(model => model.First().City)</div>
		<div class="col-md-1">@Html.LabelFor(model => model.First().State)</div>
		<div class="col-md-1">@Html.LabelFor(model => model.First().Zip)</div>
		<div class="col-md-2">@Html.LabelFor(model => model.First().Email)</div>
		<div class="col-md-2">@Html.LabelFor(model => model.First().Phone)</div>
	</div>
	<div class="row">
		<form id="addContact" data-bind="submit: addContact">
			@Html.ValidationSummary()
			<fieldset>
				<div class="col-md-3">
					@Html.TextBoxFor(model => model.First().FirstName, new { Value = "" })
					@Html.ValidationMessageFor(model => model.First().FirstName,null, new { @class = "help-inline" })
					@Html.TextBox("LastName")
				</div>
				<div class="col-md-2">
					<input type="text" name="Address">
				</div>
				<div class="col-md-1">
					<input type="text" name="City">
				</div>
				<div class="col-md-1">
					<input type="text" name="State">
				</div>
				<div class="col-md-1">
					<input type="text" name="Zip" value="Zip">
				</div>
				<div class="col-md-2">
					<input type="text" name="Email" value="Email">
				</div>
				<div class="col-md-2">
					@Html.TextBoxFor(model => model.First().Phone, new { Value = "" })
				</div>
				<div class="col-md-1">
					<input type="submit" value="Add" />
				</div>
			</fieldset>
		</form>
	</div>
	<div id="contacts" data-bind="foreach: contacts">
		<div class="row">
			<div data-bind="text: FullName" class="col-md-3"></div>
			<div data-bind="text: $data.Address || 'Address?'" class="col-md-2"></div>
			<div data-bind="text: $data.City || 'City?'" class="col-md-1"></div>
			<div data-bind="text: $data.State || 'State?'" class="col-md-1"></div>
			<div data-bind="text: $data.Zip || 'Zip?'" class="col-md-1"></div>
			<div data-bind="if: $data.Email" class="col-md-2"><a data-bind="attr: { href: 'mailto:' + Email }, text: Email"></a></div>
			<div data-bind="ifnot: $data.Email" class="col-md-2"><span>Email?</span></div>
			<div data-bind="text: $data.Phone || 'Phone?'" class="col-md-2" style="width: 125px;"></div>
			<div class="col-md-1"><a data-bind="attr: { href: Self }, click: $root.removeContact" class="ui-state-default ui-corner-all">Remove</a></div>
		</div>
	</div>
</div>